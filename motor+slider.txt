/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/bcdbfe62-9695-43e5-9193-3eb22ad7e65d 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int intensity;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

int pwm = 2;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  pinMode(pwm,OUTPUT);
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  
}


/*
  Since Intensity is READ_WRITE variable, onIntensityChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onIntensityChange()  {
  // Add your code here to act upon Intensity change
  int out = map(intensity,0,255,0,255);
  analogWrite(pwm,out);
}

Objective: To connect a motor and control its speed using Arduino IoT Cloud.

Theory: In order to control the speed of a motor, we can use Pulse Width Modulation (PWM) technique. In this technique, we change the duty cycle of the digital signal that is sent to the motor. The duty cycle represents the percentage of time that the signal is high (ON) in one cycle. By changing the duty cycle, we can control the speed of the motor.

We can use the Arduino Uno, ESP8266 or MKR1010 boards to connect the motor and control its speed using Arduino IoT Cloud. We can create a READ/WRITE variable in the Cloud Thing for the motor speed, and update it from the Cloud Dashboard. Whenever the value of this variable is changed, the onIntensityChange() function is called, which changes the duty cycle of the PWM signal sent to the motor.

Algorithm:

Include the "thingProperties.h" header file in the sketch.
Declare a variable for the PWM pin.
Initialize the serial communication and wait for the port to open.
Call the initProperties() function to initialize the IoT Cloud variables.
Connect to the Arduino IoT Cloud using the ArduinoCloud.begin() function.
Set the debug message level using the setDebugMessageLevel() function.
Set the pinMode for the PWM pin as OUTPUT.
In the onIntensityChange() function, use the map() function to map the range of the variable to the range of the PWM signal.
Call the analogWrite() function with the mapped value as the second argument.
In the loop() function, call the ArduinoCloud.update() function to update the IoT Cloud variables.

Connection:
https://res.cloudinary.com/practicaldev/image/fetch/s--p6lfQ8Y2--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_auto%2Cw_880/https://s3-eu-west-1.amazonaws.com/wia-flarum-bucket/2018-06-07/1528381887-132077-dc-motor-arduino-2.png